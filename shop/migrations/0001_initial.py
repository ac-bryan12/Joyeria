# Generated by Django 3.2 on 2022-01-17 07:33
from datetime import date
from authenticate.models import Profile
from django.contrib.auth.models import Group,User
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from producto.models import Articulo
from shop.models import Pago,DetallesPedido,Pedido,Factura
from shop.serializers import CartSerializer
from random import randint

def crear_pedido(data,user,fecha):
        serializer = CartSerializer(data=data,many=True)
        serializer.is_valid()
        pedido = Pedido()
        pedido.usuario = user
        pedido.save()
        
        valor_total = 0
        for product in serializer.validated_data:
            articulo = Articulo.objects.get(pk=product['id'])   
            detalle = DetallesPedido()
            detalle.pedido = pedido
            detalle.articulo = articulo
            detalle.cantidadSolicitada = product['amount']
            
            if articulo.promocion:
                detalle.precioUnitario = articulo.promocion
            else:
                detalle.precioUnitario =  articulo.precio
            
            detalle.save()
            
            if articulo.stock >= product['amount']:
                articulo.stock = int(articulo.stock) -  int(product['amount'])
                articulo.save()
            else:
                articulo.stock = 0
                articulo.save()
            
            valor_total += float(detalle.precioUnitario) * int(detalle.cantidadSolicitada)
        
        if valor_total != 0.0:
            pago = Pago.objects.create(valor=valor_total)
            pedido.total = valor_total
            pedido.fechaCompra = fecha
            pedido.save()
            factura = Factura.objects.create(pago=pago,pedido=pedido)
            factura.fechaFacturacion = fecha
            factura.save()

def insert_data(apps, schema_editor):
    # Creaci√≥n de un cliente
    g_cliente = Group.objects.get(name="cliente")
    user = User()
    user.first_name = "cliente"
    user.last_name = "prueba"
    user.email = "cliente@example.com"
    user.username = "cliente@example.com" 
    user.set_password("Prueba_123")
    user.save()
    
    user.groups.add(g_cliente)
    user.save()
    
    Profile.objects.create(user=user,direccion="Av. Quito",telefono="0874521458")
    
    # Realizando las compras
    data = [
        [
            {
                "id":1,
                "amount":3,
            },
            {
                "id":18,
                "amount":2,
            },
        ],
        [
            {
                "id":2,
                "amount":2,
            },
            {
                "id":3,
                "amount":1,
            }
        ],
        [
            {
                "id":4,
                "amount":2,
            },
            {
                "id":19,
                "amount":3,
            },
        ],
        [
            {
                "id":5,
                "amount":3,
            },
            {
                "id":6,
                "amount":2,
            }
        ],
        [
            {
                "id":7,
                "amount":1,
            },
            {
                "id":20,
                "amount":3,
            },
        ],
        [
            {
                "id":8,
                "amount":1,
            },
            {
                "id":9,
                "amount":2,
            }
        ],
        [
            {
                "id":10,
                "amount":2,
            },
            {
                "id":21,
                "amount":2,
            },
        ],
        [
            {
                "id":11,
                "amount":1,
            },
            {
                "id":12,
                "amount":2,
            }
        ],
        [
            {
                "id":13,
                "amount":1,
            },
            {
                "id":22,
                "amount":2,
            },
        ],
        [
            {
                "id":14,
                "amount":1,
            },
            {
                "id":15,
                "amount":2,
            }
        ],
        [
            {
                "id":16,
                "amount":2,
            },
            {
                "id":23,
                "amount":1,
            },
        ],
        [
            {
                "id":17,
                "amount":2,
            },
            {
                "id":24,
                "amount":2,
            },
        ],
    ]
    i = 1
    for pedido in data:
        dia = randint(1,29)
        # mes = randint(1,12)
        fecha = date(2021,i,dia)
        
        crear_pedido(pedido,user,fecha)
        i += 1

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('producto', '0001_initial'),
    ]   

    operations = [
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaCompra', models.DateField(auto_now_add=True)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10,null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaFacturacion', models.DateField(auto_now_add=True)),
                ('pago', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.pago')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.pedido')),
            ],
        ),
        migrations.CreateModel(
            name='DetallesPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidadSolicitada', models.IntegerField()),
                ('precioUnitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('articulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='producto.articulo')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.pedido')),
            ],
        ),
        migrations.RunPython(insert_data)
    ]
